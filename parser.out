Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> ayah
Rule 1     ayah -> FIRST
Rule 2     ayah -> FIRST SECOND
Rule 3     ayah -> FIRST SECOND THIRD
Rule 4     ayah -> FIRST SECOND THIRD FOURTH
Rule 5     ayah -> FIRST SECOND THIRD FOURTH FIFTH
Rule 6     ayah -> FIRST SECOND THIRD FOURTH FIFTH SIXTH
Rule 7     ayah -> FIRST SECOND THIRD FOURTH FIFTH SIXTH SEVENTH

Terminals, with rules where they appear

FIFTH                : 5 6 7
FIRST                : 1 2 3 4 5 6 7
FOURTH               : 4 5 6 7
SECOND               : 2 3 4 5 6 7
SEVENTH              : 7
SIXTH                : 6 7
THIRD                : 3 4 5 6 7
error                : 

Nonterminals, with rules where they appear

ayah                 : 0

Parsing method: LALR

state 0

    (0) S' -> . ayah
    (1) ayah -> . FIRST
    (2) ayah -> . FIRST SECOND
    (3) ayah -> . FIRST SECOND THIRD
    (4) ayah -> . FIRST SECOND THIRD FOURTH
    (5) ayah -> . FIRST SECOND THIRD FOURTH FIFTH
    (6) ayah -> . FIRST SECOND THIRD FOURTH FIFTH SIXTH
    (7) ayah -> . FIRST SECOND THIRD FOURTH FIFTH SIXTH SEVENTH

    FIRST           shift and go to state 2

    ayah                           shift and go to state 1

state 1

    (0) S' -> ayah .



state 2

    (1) ayah -> FIRST .
    (2) ayah -> FIRST . SECOND
    (3) ayah -> FIRST . SECOND THIRD
    (4) ayah -> FIRST . SECOND THIRD FOURTH
    (5) ayah -> FIRST . SECOND THIRD FOURTH FIFTH
    (6) ayah -> FIRST . SECOND THIRD FOURTH FIFTH SIXTH
    (7) ayah -> FIRST . SECOND THIRD FOURTH FIFTH SIXTH SEVENTH

    $end            reduce using rule 1 (ayah -> FIRST .)
    SECOND          shift and go to state 3


state 3

    (2) ayah -> FIRST SECOND .
    (3) ayah -> FIRST SECOND . THIRD
    (4) ayah -> FIRST SECOND . THIRD FOURTH
    (5) ayah -> FIRST SECOND . THIRD FOURTH FIFTH
    (6) ayah -> FIRST SECOND . THIRD FOURTH FIFTH SIXTH
    (7) ayah -> FIRST SECOND . THIRD FOURTH FIFTH SIXTH SEVENTH

    $end            reduce using rule 2 (ayah -> FIRST SECOND .)
    THIRD           shift and go to state 4


state 4

    (3) ayah -> FIRST SECOND THIRD .
    (4) ayah -> FIRST SECOND THIRD . FOURTH
    (5) ayah -> FIRST SECOND THIRD . FOURTH FIFTH
    (6) ayah -> FIRST SECOND THIRD . FOURTH FIFTH SIXTH
    (7) ayah -> FIRST SECOND THIRD . FOURTH FIFTH SIXTH SEVENTH

    $end            reduce using rule 3 (ayah -> FIRST SECOND THIRD .)
    FOURTH          shift and go to state 5


state 5

    (4) ayah -> FIRST SECOND THIRD FOURTH .
    (5) ayah -> FIRST SECOND THIRD FOURTH . FIFTH
    (6) ayah -> FIRST SECOND THIRD FOURTH . FIFTH SIXTH
    (7) ayah -> FIRST SECOND THIRD FOURTH . FIFTH SIXTH SEVENTH

    $end            reduce using rule 4 (ayah -> FIRST SECOND THIRD FOURTH .)
    FIFTH           shift and go to state 6


state 6

    (5) ayah -> FIRST SECOND THIRD FOURTH FIFTH .
    (6) ayah -> FIRST SECOND THIRD FOURTH FIFTH . SIXTH
    (7) ayah -> FIRST SECOND THIRD FOURTH FIFTH . SIXTH SEVENTH

    $end            reduce using rule 5 (ayah -> FIRST SECOND THIRD FOURTH FIFTH .)
    SIXTH           shift and go to state 7


state 7

    (6) ayah -> FIRST SECOND THIRD FOURTH FIFTH SIXTH .
    (7) ayah -> FIRST SECOND THIRD FOURTH FIFTH SIXTH . SEVENTH

    $end            reduce using rule 6 (ayah -> FIRST SECOND THIRD FOURTH FIFTH SIXTH .)
    SEVENTH         shift and go to state 8


state 8

    (7) ayah -> FIRST SECOND THIRD FOURTH FIFTH SIXTH SEVENTH .

    $end            reduce using rule 7 (ayah -> FIRST SECOND THIRD FOURTH FIFTH SIXTH SEVENTH .)

